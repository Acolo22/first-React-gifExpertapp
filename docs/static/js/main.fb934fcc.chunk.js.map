{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","categoy","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"mMAuCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,QAAU,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAH,sDCANO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,QAAa,ECDV,SAACA,GAAY,IAAD,EAEVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAuBpC,OAhBAC,qBAAU,WAENxB,EAAOC,GACFwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAQ1B,CAACpB,IAEIqB,EDnBuBK,CAAa1B,GAA/Ba,EAHsB,EAG3BN,KAAYa,EAHe,EAGfA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,uBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEqBvBgB,EAhCM,WAAO,IAAD,EAGazC,mBAAU,CAAC,cAHxB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAYvB,OACI,qCACK,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI2C,EAAWnB,KAAI,SAAAoB,GAAQ,OAChB,cAAC,EAAD,CAEI7B,QAAS6B,GADJA,Y,MCtBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fb934fcc.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({setCategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >= 1){\r\n          setCategorias(cats => [inputValue,...cats]);\r\n          setinputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange = {handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default CategoryAdd\r\n","\r\n\r\nexport const getGif = async(categoy) => {\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoy)}&limit=10&api_key=sbgti8AFGdaOmgPlAVD8ADhr3TvcAron`;\r\n    const resp = await fetch(url); \r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return(gifs);\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFecthGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoy}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(categoy);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoy}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading..</p> }\r\n            <div className=\"card-grid\">               \r\n                    {\r\n                        images.map(img =>(\r\n                            <GifGridItem\r\n                            key ={img.id} \r\n                            {...img}/>\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoy) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGif(categoy)\r\n            .then(imgs => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading:false\r\n\r\n                    })     \r\n              \r\n               \r\n                \r\n            })\r\n\r\n    },[categoy])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categorias, setCategorias] = useState (['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategorias(['Titans',...categorias]);\r\n    //     setCategorias(cats => [...categorias,'Titas2'])\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <h2>GifExpertApp </h2>\r\n             <CategoryAdd setCategorias = {setCategorias}></CategoryAdd>\r\n             <hr/>\r\n\r\n             <ol>\r\n                 {\r\n                 categorias.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            categoy={category} \r\n                        />\r\n                    ))\r\n                 }\r\n             </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}